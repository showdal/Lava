/*
	배열 : 같은 형태(타입)의 데이터를 여러개 모아서 한번에 관리하는 방식
			=> 하나의 변수를 이용해서 여러 개의 데이터를 관리할 수 있도록 함
	
	
	참고]
		변수의 형태
		
		1. 기본형 변수(Primitive Type, Value 형태)
			: 변수 내용이 데이터 자체인 경우
			  변수를 찾으면 그 안에 사용 가능한 데이터가 존재하는 것
				
			8가지 데이터 타입
			=> boolean, charm byte, short, int, long, float, double_
		
		
		2. 참조형 변수(Reference Type, 주소 형태)
 			: 변수 내용이 주소인 경우
 			  변수를 찾으면 그 안에 데이터가 기억된 위치(주소)를 알려주는 것
 			
 			기본 8가지 타입을 제외한 모든 변수
 			
 		
 		
 		Heap 영역
 		특징]
 			반드시 주소를 알아야 사용 가능한 영역
 			자바 메모리 중 가장 큰 영역이며 확장 가능
 			=> 부족하면 다른 영역을 빼앗아서 Heap 영역으로 사용할 수 있다.
 			
 			한 번 만들어지면 그 프로그램이 종료될 때 까지 없어지지 않는 영역
 			Heap영역에 생기는 메모리는 자동 초기화 (기본형 변수는 자동 초기화)
 		
 		
 		
 		배열 만드는 방법
 		
 		1. Heap 영역에 만든다.
 		
 			new 데이터타입[개수];
 			
 			
 		참고]
 			new 명령 : Heap에 만들어 메모리의 시작 주소를 알려준다.
 		
 		
 		
 		2. Heap에 있는 메모리의 주소를 기억할 변수를 만들어야 한다.
 			
 			데이터타입[] 변수이름;
 			
 			
 			***
 			결론]
 				Heap Type이 같은 주소만 기억할 수 있다.
 				
 				int[] num = new float[5];	<= X 타입이 달라서
				float[] num = new int[5];	<= O 플롯안에 인트가 들어갈 수 있음
			
			
			만드는 법
			
			int[] num;			<= 변수를 만든다.
			num = new int[5];	<=
			
			
			사용방법
			
			변수[위치];
					=> 위치는 0부터 시작
			
			배열주소(변수).length
			=> 배열 주소가 관리하는 곳에 있는 메모리의 개수를 알려주는 변수(명령)
			
			
			참고]
				배열의 초기화
				=> 배열 메모리는 Heap에 생기므로 자동으로 초기화가 이루어진다.
				   (기본 데이터 타입에 한해서만)
				   정수 - 0 
				   실수 - 0.0
				   논리 - false
				   문자 - 0 (아스키코드값)
				
				경우에 따라 배열 메모리에 강제로 특정값을 입력
				=> 배열의 초기화
			
			
			형식1]
				int[] num = {1,2,3,4,5};

			형식2]
				int[] num = new int[]{1,2,3,4,5};
			
			***
			배열을 초기화할 때는 크기를 지정할 수 없다.
			자동으로 배열의 크기가 결정 된다.
			
			
			참고]
			Arrays.toString(배열주소);
			=> 배열을 출력하기 위해서는 반복문을 사용해서 출력해야 한다.
			   데이터만 확인하는 용도로 배열이 가진 모든 데이터를 문자열로 변환해서
			   반화해주는 기능을 가진 함수.

				   
			
			배열변수 선언 방법2
			
			데이터타입 변수이름[];
			
				   
				   
			
			
			
 
 
 
 
 
 
 
 */




